openapi: 3.0.3
info:
  title: Kinnema
  version: 1.0.0
components:
  schemas:
    def-0:
      type: object
      title: url/auth
    def-1:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - username
        - email
      title: "#UserSchema"
    def-2:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
      title: "#LoginUserInputType"
    def-3:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - username
        - email
      title: "#LoginUserOutputType"
    def-4:
      type: object
      title: CreateUserInputType
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 5
        username:
          type: string
          minLength: 5
      required:
        - email
        - password
        - username
    def-5:
      type: object
      title: url/favorite
    def-6:
      type: object
      title: url/last_watched
    def-7:
      type: object
      title: lastWatchedSchemaOutputType
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        poster_path:
          type: string
        season:
          type: number
        episode:
          type: number
        isWatched:
          type: boolean
          nullable: true
        tmdbId:
          type: number
        atSecond:
          type: number
        totalSeconds:
          type: number
        episode_name:
          type: string
        network:
          type: number
        userId:
          type: string
          format: uuid
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
            username:
              type: string
            email:
              type: string
              format: email
          required:
            - id
            - username
            - email
          title: "#UserSchema"
      required:
        - id
        - name
        - poster_path
        - season
        - episode
        - tmdbId
        - atSecond
        - totalSeconds
        - episode_name
        - network
        - userId
    def-8:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - username
        - email
      title: "#UserSchema"
    def-9:
      type: object
      title: lastWatchedCreateSchemaOutputType
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        poster_path:
          type: string
        season:
          type: number
        episode:
          type: number
        isWatched:
          type: boolean
          nullable: true
        tmdbId:
          type: number
        atSecond:
          type: number
        totalSeconds:
          type: number
        episode_name:
          type: string
        network:
          type: number
        userId:
          type: string
          format: uuid
      required:
        - id
        - name
        - poster_path
        - season
        - episode
        - tmdbId
        - atSecond
        - totalSeconds
        - episode_name
        - network
        - userId
    def-10:
      type: object
      title: lastWatchedCreateSchemaInputType
      properties:
        tmdbId:
          type: number
        name:
          type: string
        poster_path:
          type: string
        season:
          type: number
        episode:
          type: number
        isWatched:
          type: boolean
          nullable: true
        atSecond:
          type: number
        totalSeconds:
          type: number
        episode_name:
          type: string
        network:
          type: number
      required:
        - tmdbId
        - name
        - poster_path
        - season
        - episode
        - atSecond
        - totalSeconds
        - episode_name
        - network
    def-11:
      type: object
      title: lastWatchedPatchSchemaOutputType
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        poster_path:
          type: string
        season:
          type: number
        episode:
          type: number
        isWatched:
          type: boolean
          nullable: true
        tmdbId:
          type: number
        atSecond:
          type: number
        totalSeconds:
          type: number
        episode_name:
          type: string
        network:
          type: number
        userId:
          type: string
          format: uuid
      required:
        - id
        - name
        - poster_path
        - season
        - episode
        - tmdbId
        - atSecond
        - totalSeconds
        - episode_name
        - network
        - userId
    def-12:
      type: object
      title: lastWatchedPatchSchemaInputType
      properties:
        season:
          type: number
          nullable: true
        episode:
          type: number
          nullable: true
        isWatched:
          type: boolean
          nullable: true
        atSecond:
          type: number
          nullable: true
paths:
  /api/auth/:
    get:
      responses:
        "200":
          description: Default Response
  /api/auth/register:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: CreateUserInputType
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 5
                username:
                  type: string
                  minLength: 5
              required:
                - email
                - password
                - username
        required: true
      responses:
        "200":
          description: Default Response
  /api/auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  username:
                    type: string
                  email:
                    type: string
                    format: email
                required:
                  - id
                  - username
                  - email
  /api/auth/logout:
    delete:
      responses:
        "200":
          description: Default Response
  /api/favorites/:
    get:
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    poster_path:
                      type: string
                    tmdbId:
                      type: number
                    userId:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                  required:
                    - id
                    - name
                    - poster_path
                    - tmdbId
                    - userId
                    - createdAt
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                poster_path:
                  type: string
                tmdbId:
                  type: number
              required:
                - name
                - poster_path
                - tmdbId
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  poster_path:
                    type: string
                  tmdbId:
                    type: number
                  userId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                required:
                  - id
                  - name
                  - poster_path
                  - tmdbId
                  - userId
                  - createdAt
  /api/favorites/{id}:
    delete:
      parameters:
        - schema:
            type: string
            format: uuid
          in: path
          name: id
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  poster_path:
                    type: string
                  tmdbId:
                    type: number
                  userId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                required:
                  - id
                  - name
                  - poster_path
                  - tmdbId
                  - userId
                  - createdAt
  /api/last_watched/:
    get:
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  title: lastWatchedSchemaOutputType
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    poster_path:
                      type: string
                    season:
                      type: number
                    episode:
                      type: number
                    isWatched:
                      type: boolean
                      nullable: true
                    tmdbId:
                      type: number
                    atSecond:
                      type: number
                    totalSeconds:
                      type: number
                    episode_name:
                      type: string
                    network:
                      type: number
                    userId:
                      type: string
                      format: uuid
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        username:
                          type: string
                        email:
                          type: string
                          format: email
                      required:
                        - id
                        - username
                        - email
                  required:
                    - id
                    - name
                    - poster_path
                    - season
                    - episode
                    - tmdbId
                    - atSecond
                    - totalSeconds
                    - episode_name
                    - network
                    - userId
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: lastWatchedCreateSchemaInputType
              properties:
                tmdbId:
                  type: number
                name:
                  type: string
                poster_path:
                  type: string
                season:
                  type: number
                episode:
                  type: number
                isWatched:
                  type: boolean
                  nullable: true
                atSecond:
                  type: number
                totalSeconds:
                  type: number
                episode_name:
                  type: string
                network:
                  type: number
              required:
                - tmdbId
                - name
                - poster_path
                - season
                - episode
                - atSecond
                - totalSeconds
                - episode_name
                - network
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                title: lastWatchedCreateSchemaOutputType
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  poster_path:
                    type: string
                  season:
                    type: number
                  episode:
                    type: number
                  isWatched:
                    type: boolean
                    nullable: true
                  tmdbId:
                    type: number
                  atSecond:
                    type: number
                  totalSeconds:
                    type: number
                  episode_name:
                    type: string
                  network:
                    type: number
                  userId:
                    type: string
                    format: uuid
                required:
                  - id
                  - name
                  - poster_path
                  - season
                  - episode
                  - tmdbId
                  - atSecond
                  - totalSeconds
                  - episode_name
                  - network
                  - userId
  /api/last_watched/{tmdbId}:
    get:
      parameters:
        - schema:
            type: number
          in: path
          name: tmdbId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                title: lastWatchedSchemaOutputType
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  poster_path:
                    type: string
                  season:
                    type: number
                  episode:
                    type: number
                  isWatched:
                    type: boolean
                    nullable: true
                  tmdbId:
                    type: number
                  atSecond:
                    type: number
                  totalSeconds:
                    type: number
                  episode_name:
                    type: string
                  network:
                    type: number
                  userId:
                    type: string
                    format: uuid
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      username:
                        type: string
                      email:
                        type: string
                        format: email
                    required:
                      - id
                      - username
                      - email
                required:
                  - id
                  - name
                  - poster_path
                  - season
                  - episode
                  - tmdbId
                  - atSecond
                  - totalSeconds
                  - episode_name
                  - network
                  - userId
        "404":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
  /api/last_watched/{id}:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: lastWatchedPatchSchemaInputType
              properties:
                season:
                  type: number
                  nullable: true
                episode:
                  type: number
                  nullable: true
                isWatched:
                  type: boolean
                  nullable: true
                atSecond:
                  type: number
                  nullable: true
      parameters:
        - schema:
            type: string
            format: uuid
          in: path
          name: id
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                title: lastWatchedPatchSchemaOutputType
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  poster_path:
                    type: string
                  season:
                    type: number
                  episode:
                    type: number
                  isWatched:
                    type: boolean
                    nullable: true
                  tmdbId:
                    type: number
                  atSecond:
                    type: number
                  totalSeconds:
                    type: number
                  episode_name:
                    type: string
                  network:
                    type: number
                  userId:
                    type: string
                    format: uuid
                required:
                  - id
                  - name
                  - poster_path
                  - season
                  - episode
                  - tmdbId
                  - atSecond
                  - totalSeconds
                  - episode_name
                  - network
                  - userId
  /openapi.yaml/:
    get:
      responses:
        "200":
          description: Default Response
  /api/watch/providers:
    get:
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  providers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        priority:
                          type: number
                        isEnabled:
                          type: boolean
  /api/watch/:
    get:
      parameters:
        - schema:
            type: string
          in: query
          name: serie_name
          required: false
        - schema:
            type: number
          in: query
          name: season_number
          required: false
        - schema:
            type: number
          in: query
          name: episode_number
          required: false
      responses:
        "200":
          description: Default Response
