/* tslint:disable */
/* eslint-disable */
/**
 * Kinnema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiAuthLoginPost200Response,
  ApiAuthLoginPostRequest,
  ApiFavoritesGet200ResponseInner,
  ApiFavoritesPostRequest,
  CreateUserInputType,
} from '../models/index';
import {
    ApiAuthLoginPost200ResponseFromJSON,
    ApiAuthLoginPost200ResponseToJSON,
    ApiAuthLoginPostRequestFromJSON,
    ApiAuthLoginPostRequestToJSON,
    ApiFavoritesGet200ResponseInnerFromJSON,
    ApiFavoritesGet200ResponseInnerToJSON,
    ApiFavoritesPostRequestFromJSON,
    ApiFavoritesPostRequestToJSON,
    CreateUserInputTypeFromJSON,
    CreateUserInputTypeToJSON,
} from '../models/index';

export interface ApiAuthLoginPostOperationRequest {
    apiAuthLoginPostRequest: ApiAuthLoginPostRequest;
}

export interface ApiAuthRegisterPostRequest {
    createUserInputType: CreateUserInputType;
}

export interface ApiFavoritesIdDeleteRequest {
    id: string;
}

export interface ApiFavoritesPostOperationRequest {
    apiFavoritesPostRequest: ApiFavoritesPostRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     */
    async apiAuthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiAuthGetRaw(initOverrides);
    }

    /**
     */
    async apiAuthLoginPostRaw(requestParameters: ApiAuthLoginPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiAuthLoginPost200Response>> {
        if (requestParameters['apiAuthLoginPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiAuthLoginPostRequest',
                'Required parameter "apiAuthLoginPostRequest" was null or undefined when calling apiAuthLoginPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiAuthLoginPostRequestToJSON(requestParameters['apiAuthLoginPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiAuthLoginPost200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiAuthLoginPost(requestParameters: ApiAuthLoginPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiAuthLoginPost200Response> {
        const response = await this.apiAuthLoginPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiAuthLogoutDeleteRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/logout`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthLogoutDelete(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiAuthLogoutDeleteRaw(initOverrides);
    }

    /**
     */
    async apiAuthRegisterPostRaw(requestParameters: ApiAuthRegisterPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createUserInputType'] == null) {
            throw new runtime.RequiredError(
                'createUserInputType',
                'Required parameter "createUserInputType" was null or undefined when calling apiAuthRegisterPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateUserInputTypeToJSON(requestParameters['createUserInputType']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiAuthRegisterPost(requestParameters: ApiAuthRegisterPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiAuthRegisterPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiFavoritesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ApiFavoritesGet200ResponseInner>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/favorites/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ApiFavoritesGet200ResponseInnerFromJSON));
    }

    /**
     */
    async apiFavoritesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ApiFavoritesGet200ResponseInner>> {
        const response = await this.apiFavoritesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiFavoritesIdDeleteRaw(requestParameters: ApiFavoritesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiFavoritesGet200ResponseInner>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiFavoritesIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/favorites/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiFavoritesGet200ResponseInnerFromJSON(jsonValue));
    }

    /**
     */
    async apiFavoritesIdDelete(requestParameters: ApiFavoritesIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiFavoritesGet200ResponseInner> {
        const response = await this.apiFavoritesIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiFavoritesPostRaw(requestParameters: ApiFavoritesPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiFavoritesGet200ResponseInner>> {
        if (requestParameters['apiFavoritesPostRequest'] == null) {
            throw new runtime.RequiredError(
                'apiFavoritesPostRequest',
                'Required parameter "apiFavoritesPostRequest" was null or undefined when calling apiFavoritesPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/favorites/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiFavoritesPostRequestToJSON(requestParameters['apiFavoritesPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiFavoritesGet200ResponseInnerFromJSON(jsonValue));
    }

    /**
     */
    async apiFavoritesPost(requestParameters: ApiFavoritesPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiFavoritesGet200ResponseInner> {
        const response = await this.apiFavoritesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async openapiYamlGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/openapi.yaml/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async openapiYamlGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.openapiYamlGetRaw(initOverrides);
    }

}
